name: ML Pipeline with Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  preprocessing:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Run preprocessing
        run: |
          python src/preprocessing.py

      - name: Upload clean_data as artifact
        uses: actions/upload-artifact@v4
        with:
          name: clean_data
          path: clean_data/

  training:
    runs-on: ubuntu-latest
    needs: preprocessing
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          pip install -r requirements_train.txt

      - name: Download clean_data artifact
        uses: actions/download-artifact@v4
        with:
          name: clean_data
          path: clean_data

      - name: Run training
        run: |
          python src/train.py

      - name: Upload model artifact
        uses: actions/upload-artifact@v4
        with:
          name: model
          path: model/

      - name: Upload report_site artifact
        uses: actions/upload-artifact@v4
        with:
          name: report
          path: report_site/

  deploy-static-web:
    runs-on: ubuntu-latest
    needs: training
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Download report artifact
        uses: actions/download-artifact@v4
        with:
          name: report
          path: report_site

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact to Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: report_site

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  docker-macos-test:
    runs-on: ubuntu-latest
    needs: training
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      
      - name: Download report artifact
        uses: actions/download-artifact@v4
        with:
          name: report
          path: report_site
      
      - name: Download model artifact
        uses: actions/download-artifact@v4
        with:
          name: model
          path: model
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build and push preprocessing image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: src/Dockerfile.preprocessing
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/preprocessing:v.1

      - name: Build and push training image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: src/Dockerfile.train
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/training:v.1
      
      - name: Build and push streamlit image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: report_site/Dockerfile
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/streamlit:v.1


      - name: Build and run docker compose
        run: |
           docker compose up --build
        timeout-minutes: 2

      # - name: List generated files
      #   run: |
      #     ls -R clean_data
      #     ls -R report_site

  
  # deploy-streamlit:
  #   runs-on: ubuntu-latest
  #   needs: training
  #   steps:
  #     - name: Checkout repo
  #       uses: actions/checkout@v4

  #     - name: Download report artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: report
  #         path: report_site

  #     - name: Set up Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: "3.12"

  #     - name: Install dependencies
  #       run: |
  #         pip install -r requirements_streamlit.txt

  #     - uses: streamlit/streamlit-app-action@v0.0.3
  #       with:
  #         app-path: report_site/app.py
      
      # - name: Run streamlit
      #   run: |
      # #    streamlit run report_site/app.py

      

